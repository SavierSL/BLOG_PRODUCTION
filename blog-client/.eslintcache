[{"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\index.tsx":"1","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\App.tsx":"2","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\FrontPage.tsx":"3","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\rootReducers.ts":"4","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\store.ts":"5","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\sagas\\sagas.ts":"6","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\types.ts":"7","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\logIn.ts":"8","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\post.ts":"9","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\RegisterPage.tsx":"10","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\register.ts":"11","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\HomePage.tsx":"12","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\light.ts":"13","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\styles.ts":"14","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\dark.ts":"15","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\types.ts":"16","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\alert\\Alert.tsx":"17","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\getTheme.ts":"18","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\alert.ts":"19","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\index.ts":"20","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\blogPost.ts":"21","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\BlogPosts.tsx":"22","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\blogPosts.ts":"23","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\users.ts":"24","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\user.ts":"25","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\mincomponents\\blogPost.tsx":"26","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\UserPost.tsx":"27","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\mincomponents\\loader.tsx":"28","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\Nav.tsx":"29","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\Footer.tsx":"30"},{"size":229,"mtime":1611572734403,"results":"31","hashOfConfig":"32"},{"size":1879,"mtime":1612452988073,"results":"33","hashOfConfig":"32"},{"size":2962,"mtime":1612423934019,"results":"34","hashOfConfig":"32"},{"size":262,"mtime":1611983274553,"results":"35","hashOfConfig":"32"},{"size":520,"mtime":1611313811890,"results":"36","hashOfConfig":"32"},{"size":10160,"mtime":1612501520107,"results":"37","hashOfConfig":"32"},{"size":1846,"mtime":1612409627431,"results":"38","hashOfConfig":"32"},{"size":297,"mtime":1611314361495,"results":"39","hashOfConfig":"32"},{"size":1585,"mtime":1612357742737,"results":"40","hashOfConfig":"32"},{"size":3733,"mtime":1612423958186,"results":"41","hashOfConfig":"32"},{"size":237,"mtime":1611555814741,"results":"42","hashOfConfig":"32"},{"size":9505,"mtime":1612455518915,"results":"43","hashOfConfig":"32"},{"size":188,"mtime":1612362076815,"results":"44","hashOfConfig":"32"},{"size":370,"mtime":1612456608779,"results":"45","hashOfConfig":"32"},{"size":239,"mtime":1612278180488,"results":"46","hashOfConfig":"32"},{"size":65,"mtime":1611587269005,"results":"47","hashOfConfig":"32"},{"size":506,"mtime":1611749758928,"results":"48","hashOfConfig":"32"},{"size":290,"mtime":1612177058538,"results":"49","hashOfConfig":"32"},{"size":187,"mtime":1611640997684,"results":"50","hashOfConfig":"32"},{"size":85,"mtime":1611586625214,"results":"51","hashOfConfig":"32"},{"size":629,"mtime":1612269890218,"results":"52","hashOfConfig":"32"},{"size":2034,"mtime":1612500423943,"results":"53","hashOfConfig":"32"},{"size":737,"mtime":1612146737070,"results":"54","hashOfConfig":"32"},{"size":1001,"mtime":1612413926882,"results":"55","hashOfConfig":"32"},{"size":2135,"mtime":1612421509799,"results":"56","hashOfConfig":"32"},{"size":1443,"mtime":1612505178707,"results":"57","hashOfConfig":"32"},{"size":2140,"mtime":1612456271825,"results":"58","hashOfConfig":"32"},{"size":259,"mtime":1612262069390,"results":"59","hashOfConfig":"32"},{"size":1630,"mtime":1612501211105,"results":"60","hashOfConfig":"32"},{"size":194,"mtime":1612452821401,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"qf0wnc",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\index.tsx",[],["130","131"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\App.tsx",[],["132","133"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\FrontPage.tsx",["134"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logInAction } from \"../redux/actions/logIn\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport Alert from \"./alert/Alert\";\r\nimport { removeAlertAction } from \"../redux/actions/alert\";\r\nimport { getAllPost } from \"../redux/actions/blogPost\";\r\n\r\nexport interface FrontPageProps {\r\n  theme: any;\r\n}\r\ninterface logInState {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst FrontPage: React.FC<FrontPageProps> = ({ theme }) => {\r\n  const error = useSelector((state: any) => state.post.msg);\r\n  const isAuth = useSelector((state: any) => state.post.isAuth);\r\n  console.log(theme);\r\n  const [logInInput, setLogInInput] = useState<logInState>({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getAllPost());\r\n  }, []);\r\n  const dispatch = useDispatch();\r\n  const handleInput = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(removeAlertAction());\r\n    setLogInInput({ ...logInInput, [e.target.name]: e.target.value });\r\n  };\r\n  const { email, password } = logInInput;\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"submitted\");\r\n    dispatch(logInAction(email, password));\r\n  };\r\n  console.log(logInInput);\r\n  if (isAuth === true) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"frontPageContainer\">\r\n        <div className=\"frontPage\">\r\n          <div className=\"frontPage_content\">\r\n            <h1 className=\"primary-heading\">\r\n              BLOG <span style={{ color: \"#00aeef\" }}>IT</span>\r\n            </h1>\r\n            <div className=\"frontPage_form\">\r\n              <Alert error={error} />\r\n              <form\r\n                className=\"primary-form\"\r\n                action=\"\"\r\n                onSubmit={(e) => handleSubmit(e)}\r\n              >\r\n                <input\r\n                  className=\"primary-form_primary-input\"\r\n                  placeholder=\"email\"\r\n                  onChange={(e) => handleInput(e)}\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  value={logInInput.email}\r\n                />\r\n                <input\r\n                  className=\"primary-form_primary-input\"\r\n                  placeholder=\"password\"\r\n                  onChange={(e) => handleInput(e)}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={logInInput.password}\r\n                />\r\n                <button className=\"primary-form_primary-button\">LOG IN</button>\r\n              </form>\r\n              <h2>\r\n                <span>You still don't have an account?</span>{\" \"}\r\n                <NavLink to=\"/register\" style={{ color: \"#00aeef\" }}>\r\n                  Register\r\n                </NavLink>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\rootReducers.ts",[],["135","136"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\store.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\sagas\\sagas.ts",["137","138"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\types.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\logIn.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\post.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\RegisterPage.tsx",[],["139","140"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\register.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\HomePage.tsx",["141","142","143"],"import { FilePond, registerPlugin } from \"react-filepond\";\r\n\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { blogPostAction, getAllPost } from \"../redux/actions/blogPost\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport {\r\n  deletePostAction,\r\n  getUserAction,\r\n  getUserPostsAction,\r\n  logOutUser,\r\n  newPostUserAction,\r\n} from \"../redux/actions/users\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nexport interface HomePageProps {\r\n  theme: string;\r\n}\r\nexport interface BlogPost {\r\n  title: string;\r\n  blogContent: string;\r\n  img: unknown | null | string;\r\n  imgType: string;\r\n}\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginFileEncode,\r\n  FilePondPluginImageResize\r\n);\r\n\r\nconst HomePage: React.FC<HomePageProps> = ({ theme }) => {\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = useSelector((state: any) => state.user.user);\r\n  const animation = useAnimation();\r\n  const [file, setFiles] = useState([]);\r\n  const posts = useSelector((state: any) => state.user.posts);\r\n  const loading = useSelector((state: any) => state.user.loadingPosts);\r\n  const [click, setClick] = useState(false);\r\n  const [blogPost, setBlogPost] = useState<BlogPost>({\r\n    title: \"\",\r\n    blogContent: \"\",\r\n    img: null,\r\n    imgType: \"\",\r\n  });\r\n  const [createPostClick, setCreatePostClick] = useState<null | false | true>(\r\n    null\r\n  );\r\n  const [vLovation, setVlocation] = useState(0);\r\n  useEffect((): any => {\r\n    dispatch(getUserAction(token));\r\n    dispatch(getUserPostsAction(token));\r\n    if (token === null) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    if (createPostClick) {\r\n      animation.start(\"visible\");\r\n    }\r\n    if (createPostClick === false) {\r\n      animation.start(\"visible\");\r\n    }\r\n    console.log(token);\r\n  }, [token, dispatch, click, createPostClick, animation]);\r\n  const { title, blogContent, img, imgType } = blogPost;\r\n  const handleUpdateFIle = (file: any) => {\r\n    setFiles(\r\n      file.map((files: any) => {\r\n        const file = files.file;\r\n        setBlogPost({ ...blogPost, imgType: file.type });\r\n        return file;\r\n      })\r\n    );\r\n  };\r\n  if (token === null) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(blogPostAction(title, blogContent, img, token, imgType));\r\n    console.log(blogPost);\r\n  };\r\n  const toBase64 = (file: any) =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n\r\n      if (file.length === 1) {\r\n        reader.readAsDataURL(file[0]);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n      }\r\n      return reader;\r\n    });\r\n  let updatedImage: string | unknown;\r\n  const newImage = toBase64(file);\r\n  const dataImage = async () => {\r\n    const newData = await newImage;\r\n    updatedImage = newData;\r\n    return newData;\r\n  };\r\n  dataImage();\r\n  const handleInput = (e: any) => {\r\n    e.preventDefault();\r\n    setBlogPost({\r\n      ...blogPost,\r\n      [e.target.name]: e.target.value,\r\n      img: updatedImage,\r\n    });\r\n  };\r\n  const styleThemeT = {\r\n    color: theme === \"LIGHT\" ? \"#000\" : \"#fff\",\r\n  };\r\n  const styleThemeB = {\r\n    background: theme === \"LIGHT\" ? \"#fff\" : \"#000\",\r\n  };\r\n  const styleThemeBMain = {\r\n    background: theme === \"LIGHT\" ? \"#f1f2f2\" : \"#005068\",\r\n  };\r\n  const handleDeleteButton = (e: any, postID: string) => {\r\n    e.preventDefault();\r\n    console.log(\"delete\");\r\n    dispatch(deletePostAction(token, postID));\r\n    setClick(!click);\r\n  };\r\n  const userPosts =\r\n    posts.length === 0 ? (\r\n      <h3 className=\"tertiary-heading\">You do not have any blog post</h3>\r\n    ) : (\r\n      posts.map((post: any) => {\r\n        // return <img style={{ height: \"20rem\" }} src={post.image} alt=\"\" />;\r\n\r\n        return (\r\n          <div style={styleThemeB} className=\"homeBlogContainer_blogs\">\r\n            <img\r\n              className=\"homeBlogContainer_blogs-image\"\r\n              src={user.avatar}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"homeBlogContainer_blogs-details\">\r\n              <p className=\"primary-p\" style={styleThemeT}>\r\n                {post.title} <span> - {user.name}</span>\r\n              </p>\r\n              <p className=\"primary-p\" style={styleThemeT}>\r\n                {post.date}\r\n              </p>\r\n              <p style={{ color: \"#00aeef\" }} className=\"primary-p\">\r\n                {user.email}\r\n              </p>\r\n            </div>\r\n            <div className=\"homeBlogContainer_blogs-link\">\r\n              <p className=\"light-p\">{`http://localhost:3000/user-post/${post._id}`}</p>\r\n              <CopyToClipboard\r\n                text={`http://localhost:3000/user-post/${post._id}`}\r\n              >\r\n                <button className=\"userposts-buttons\">Copy to clipboard</button>\r\n              </CopyToClipboard>\r\n            </div>\r\n            <div className=\"homeBlogContainer_blogs-delete\">\r\n              <button\r\n                className=\"userposts-buttons-r\"\r\n                onClick={(e) => handleDeleteButton(e, post._id)}\r\n              >\r\n                DELETE\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n  const ifLoading = loading ? <h1>Getting Blog Datas</h1> : userPosts;\r\n  const handleLogout = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"logout\");\r\n    console.log(token);\r\n    dispatch(logOutUser());\r\n    setClick(!click);\r\n  };\r\n  const createPostVariants = {\r\n    hidden: {\r\n      y: -180,\r\n      opacity: 0,\r\n      display: \"none\",\r\n    },\r\n    visible: {\r\n      y: vLovation,\r\n      opacity: 1,\r\n      display: \"block\",\r\n    },\r\n  };\r\n\r\n  const createPostButton = (e: any) => {\r\n    e.preventDefault();\r\n    setCreatePostClick(true);\r\n    setVlocation(0);\r\n  };\r\n  const handleClose = (e: any) => {\r\n    e.preventDefault();\r\n    setCreatePostClick(false);\r\n    setVlocation(-880);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"homePage\">\r\n        <button onClick={(e) => handleLogout(e)} className=\"logOutBtn\">\r\n          LOG OUT\r\n        </button>\r\n\r\n        <h1 className=\"tertiary-heading\">{user.name}</h1>\r\n        <div>\r\n          <span className=\"primary-span\">{user.email}</span>\r\n        </div>\r\n        <button\r\n          style={{ marginTop: \"2rem\" }}\r\n          className=\"primary-button\"\r\n          onClick={(e) => createPostButton(e)}\r\n        >\r\n          Create Post\r\n        </button>\r\n        <div style={styleThemeBMain} className=\"homeBlogContainer\">\r\n          {ifLoading}\r\n        </div>\r\n\r\n        <div className=\"homePage_content\">\r\n          <motion.div\r\n            animate={animation}\r\n            variants={createPostVariants}\r\n            initial=\"hidden\"\r\n            className=\"homePage_createBlogContainer\"\r\n          >\r\n            <FilePond\r\n              files={file}\r\n              onupdatefiles={(file) => handleUpdateFIle(file)}\r\n              name=\"files\"\r\n              labelIdle='Drag  Drop your files or <span class=\"filepond--label-action\">Browse</span>'\r\n            />\r\n            <div className=\"frontPage_form\">\r\n              <h2 style={{ color: \"red\" }}>\r\n                {file.length === 0 ? \"Add an image first\" : \"\"}\r\n              </h2>\r\n              <form\r\n                className=\"primary-form\"\r\n                action=\"\"\r\n                onSubmit={(e) => handleSubmit(e)}\r\n              >\r\n                <input\r\n                  className=\"primary-form_primary-input\"\r\n                  placeholder=\"title\"\r\n                  onChange={(e) => handleInput(e)}\r\n                  style={{\r\n                    width: \"80%\",\r\n                    border: `${file.length === 0 ? \"solid red 1px\" : \"\"}`,\r\n                  }}\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  value={blogPost.title}\r\n                  disabled={file.length === 0 ? true : false}\r\n                />\r\n                <textarea\r\n                  className=\"primary-form_primary-input\"\r\n                  placeholder=\"Caption\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"10rem\",\r\n                    border: `${file.length === 0 ? \"solid red 1px\" : \"\"}`,\r\n                  }}\r\n                  onChange={(e) => handleInput(e)}\r\n                  name=\"blogContent\"\r\n                  value={blogPost.blogContent}\r\n                  disabled={file.length === 0 ? true : false}\r\n                />\r\n              </form>\r\n            </div>\r\n            <button className=\"primary-button\" onClick={(e) => handleSubmit(e)}>\r\n              Submit\r\n            </button>\r\n            <button className=\"primary-button\" onClick={(e) => handleClose(e)}>\r\n              Close\r\n            </button>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\light.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\styles.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\dark.ts",["144"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\types.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\alert\\Alert.tsx",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\getTheme.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\alert.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\index.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\blogPost.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\BlogPosts.tsx",["145","146","147","148","149","150"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\blogPosts.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\users.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\user.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\mincomponents\\blogPost.tsx",["151","152","153","154"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { getUserPost } from \"../../redux/actions/blogPost\";\r\n\r\nexport interface BlogPostProps {\r\n  post: any;\r\n}\r\n\r\nconst BlogPost: React.FC<BlogPostProps> = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const [clickLink, setClickLink] = useState(false);\r\n  console.log(post._id);\r\n\r\n  const handleBlogLink = (e: any, id: string) => {\r\n    e.preventDefault();\r\n    setClickLink(true);\r\n    console.log(clickLink);\r\n  };\r\n  if (clickLink) {\r\n    return <Redirect to={`user-post/${post._id}`} />;\r\n  }\r\n  return (\r\n    <div\r\n      onClick={(e) => {\r\n        handleBlogLink(e, post._id);\r\n      }}\r\n      className=\"blogContentContainer-content\"\r\n    >\r\n      <div className=\"blogContentContainer-content-box\">\r\n        <div className=\"blogContentContainer-content-box-color\"></div>\r\n        <div className=\"blogContentContainer-content-box-details\">\r\n          <h1 className=\"blogContentContainer-content-box-details-txt\">\r\n            {`${post.name}'s blog`}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <img\r\n        className=\"blogContentContainer-content-image\"\r\n        src={post.image}\r\n        alt=\"\"\r\n      />\r\n      <div className=\"blogContentContainer-content-details\">\r\n        <h1>{post.title}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\UserPost.tsx",["155","156"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { getUserPost } from \"../redux/actions/blogPost\";\r\nimport { exitUserPost } from \"../redux/actions/users\";\r\nimport Loader from \"./mincomponents/loader\";\r\n\r\nexport interface UserPostProps {\r\n  props: any;\r\n}\r\n\r\nconst UserPost: React.FC<UserPostProps> = ({ props }) => {\r\n  const postID = props.match.params.params_id;\r\n  const post = useSelector((state: any) => state.user.post);\r\n  const loading = useSelector((state: any) => state.user.loading);\r\n  const [exit, setExit] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserPost(postID));\r\n  }, []);\r\n  const ecodeDataToImage = () => {\r\n    if (post) {\r\n      const converToBase64 = (img: any) => {\r\n        const buffit = Buffer.from(img);\r\n        post.image = `${buffit}`;\r\n      };\r\n      converToBase64(post.img);\r\n    }\r\n  };\r\n  ecodeDataToImage();\r\n  const handleExit = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(exitUserPost());\r\n    setExit(true);\r\n  };\r\n  if (exit) {\r\n    return <Redirect to=\"/blog-posts\" />;\r\n  }\r\n  const blogPostContent = loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <div className=\"userPostContainer\">\r\n      <button className=\"primary-button\" onClick={(e) => handleExit(e)}>\r\n        BACK\r\n      </button>\r\n      <div className=\"userPostContainer__userBlogPost\">\r\n        <h1 className=\"userPostContainer__userBlogPost-title\">\r\n          {post && post.title}\r\n        </h1>\r\n        <p>{post && post.name}</p>\r\n        <p>{post && post.date}</p>\r\n        <div className=\"userPostContainer__userBlogPost-imageContainer\">\r\n          <img\r\n            className=\"userPostContainer__userBlogPost-imageContainer-image\"\r\n            src={post !== null ? post.image : \"\"}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n\r\n        <p className=\"userPostContainer__userBlogPost-content\">\r\n          {post && post.blogContent}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n  return <>{blogPostContent}</>;\r\n};\r\n\r\nexport default UserPost;\r\n","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\mincomponents\\loader.tsx",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\Nav.tsx",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\Footer.tsx",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":27,"column":6,"nodeType":"165","endLine":27,"endColumn":8,"suggestions":"166"},{"ruleId":"157","replacedBy":"167"},{"ruleId":"159","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":165,"column":38,"nodeType":"175","messageId":"176","endLine":165,"endColumn":40},{"ruleId":"157","replacedBy":"177"},{"ruleId":"159","replacedBy":"178"},{"ruleId":"169","severity":1,"message":"179","line":12,"column":26,"nodeType":"171","messageId":"172","endLine":12,"endColumn":36},{"ruleId":"169","severity":1,"message":"180","line":13,"column":10,"nodeType":"171","messageId":"172","endLine":13,"endColumn":17},{"ruleId":"169","severity":1,"message":"181","line":20,"column":3,"nodeType":"171","messageId":"172","endLine":20,"endColumn":20},{"ruleId":"169","severity":1,"message":"182","line":1,"column":10,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"183","line":1,"column":28,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"180","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":17},{"ruleId":"169","severity":1,"message":"184","line":4,"column":19,"nodeType":"171","messageId":"172","endLine":4,"endColumn":27},{"ruleId":"169","severity":1,"message":"185","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":16},{"ruleId":"169","severity":1,"message":"186","line":14,"column":9,"nodeType":"171","messageId":"172","endLine":14,"endColumn":14},{"ruleId":"163","severity":1,"message":"187","line":24,"column":6,"nodeType":"165","endLine":24,"endColumn":8,"suggestions":"188"},{"ruleId":"169","severity":1,"message":"189","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"180","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":17},{"ruleId":"169","severity":1,"message":"190","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":21},{"ruleId":"169","severity":1,"message":"191","line":11,"column":9,"nodeType":"171","messageId":"172","endLine":11,"endColumn":17},{"ruleId":"169","severity":1,"message":"180","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":17},{"ruleId":"163","severity":1,"message":"192","line":21,"column":6,"nodeType":"165","endLine":21,"endColumn":8,"suggestions":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],["194"],["195"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["196"],["194"],["195"],"@typescript-eslint/no-unused-vars","'StringDecoder' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["194"],["195"],"'getAllPost' is defined but never used.","'NavLink' is defined but never used.","'newPostUserAction' is defined but never used.","'isWhiteSpaceLike' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'blogPost' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'loading'. Either include them or remove the dependency array.",["197"],"'useEffect' is defined but never used.","'getUserPost' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'postID'. Either include them or remove the dependency array.",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [dispatch]",{"range":"205","text":"206"},"Update the dependencies array to be: [dispatch, loading]",{"range":"207","text":"208"},"Update the dependencies array to be: [dispatch, postID]",{"range":"209","text":"210"},[869,871],"[dispatch]",[888,890],"[dispatch, loading]",[762,764],"[dispatch, postID]"]